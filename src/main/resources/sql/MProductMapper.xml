<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.demo.dao.mapper.MProductMapper">
  <resultMap id="BaseResultMap" type="com.app.demo.dao.entity.MProduct">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="current_owner" jdbcType="INTEGER" property="currentOwner" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_imgs" jdbcType="VARCHAR" property="productImgs" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="price_sale" jdbcType="INTEGER" property="priceSale" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="colors" jdbcType="VARCHAR" property="colors" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="size" jdbcType="CHAR" property="size" />
    <result column="size_idx" jdbcType="INTEGER" property="sizeIdx" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="additional" jdbcType="CHAR" property="additional" />
    <result column="history" jdbcType="VARCHAR" property="history" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="delete_flg" jdbcType="BIT" property="deleteFlg" />
  </resultMap>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    product_id, current_owner, product_name, product_imgs, price, price_sale, brand, 
    colors, `status`, `size`, size_idx, category, gender, tags, additional, history, 
    create_time, delete_flg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from m_product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from m_product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.app.demo.dao.entity.MProduct">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into m_product (product_id, current_owner, product_name, 
      product_imgs, price, price_sale, 
      brand, colors, `status`, 
      `size`, size_idx, category, 
      gender, tags, additional, 
      history, create_time, delete_flg
      )
    values (#{productId,jdbcType=INTEGER}, #{currentOwner,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, 
      #{productImgs,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{priceSale,jdbcType=INTEGER}, 
      #{brand,jdbcType=VARCHAR}, #{colors,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{size,jdbcType=CHAR}, #{sizeIdx,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, 
      #{gender,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, #{additional,jdbcType=CHAR}, 
      #{history,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{deleteFlg,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.app.demo.dao.entity.MProduct">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into m_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="currentOwner != null">
        current_owner,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productImgs != null">
        product_imgs,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="priceSale != null">
        price_sale,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="colors != null">
        colors,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="sizeIdx != null">
        size_idx,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="additional != null">
        additional,
      </if>
      <if test="history != null">
        history,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleteFlg != null">
        delete_flg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="currentOwner != null">
        #{currentOwner,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImgs != null">
        #{productImgs,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="priceSale != null">
        #{priceSale,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="colors != null">
        #{colors,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="size != null">
        #{size,jdbcType=CHAR},
      </if>
      <if test="sizeIdx != null">
        #{sizeIdx,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="additional != null">
        #{additional,jdbcType=CHAR},
      </if>
      <if test="history != null">
        #{history,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        #{deleteFlg,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.demo.dao.entity.MProduct">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update m_product
    <set>
      <if test="currentOwner != null">
        current_owner = #{currentOwner,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImgs != null">
        product_imgs = #{productImgs,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="priceSale != null">
        price_sale = #{priceSale,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="colors != null">
        colors = #{colors,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=CHAR},
      </if>
      <if test="sizeIdx != null">
        size_idx = #{sizeIdx,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="additional != null">
        additional = #{additional,jdbcType=CHAR},
      </if>
      <if test="history != null">
        history = #{history,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        delete_flg = #{deleteFlg,jdbcType=BIT},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.demo.dao.entity.MProduct">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update m_product
    set current_owner = #{currentOwner,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      product_imgs = #{productImgs,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      price_sale = #{priceSale,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      colors = #{colors,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      `size` = #{size,jdbcType=CHAR},
      size_idx = #{sizeIdx,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      additional = #{additional,jdbcType=CHAR},
      history = #{history,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delete_flg = #{deleteFlg,jdbcType=BIT}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <select id="findProduct" parameterType="map" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from m_product
    where
      product_id = #{productId,jdbcType=INTEGER} and
      delete_flg = 0
  </select>
  <select id="findProductByFilter" parameterType="com.app.demo.dto.request.ProductFilterReqDto" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from m_product
    where
      delete_flg = 0
      <if test="keyword != null and keyword != ''">
        and (
          product_name like concat(#{keyword}, '%')
          or brand like concat(#{keyword}, '%')
          or tags like concat('%', #{keyword}, '%')
        )
      </if>
      <if test="minPrice != null">
        <choose>
          <when test="maxPrice != null">
            and (
              (price_sale is not null and price_sale &gt;= #{minPrice} and price_sale &lt;= #{maxPrice})
              or (price_sale is null and price &gt;= #{minPrice} and price &lt;= #{maxPrice})
            )
          </when>
          <otherwise>
            and (
              (price_sale is not null and price_sale &gt;= #{minPrice})
              or (price_sale is null and price &gt;= #{minPrice})
            )
          </otherwise>
        </choose>
      </if>
      <if test="maxPrice != null">
        and (
          (price_sale is not null and price_sale &lt;= #{maxPrice})
          or (price_sale is null and price &lt;= #{maxPrice})
        )
      </if>
      <if test="gender != null and !gender.isEmpty()">
        and gender in
        <foreach close=")" collection="gender" item="genderValue" open="(" separator=",">
          #{genderValue}
        </foreach>
      </if>
      <if test="brands != null and !brands.isEmpty()">
        and brand in
        <foreach close=")" collection="brands" item="brandValue" open="(" separator=",">
          #{brandValue}
        </foreach>
      </if>
      <if test="category != null and !category.isEmpty()">
        and category in
        <foreach close=")" collection="category" item="categoryValue" open="(" separator=",">
          #{categoryValue}
        </foreach>
      </if>
      <if test="status != null and !status.isEmpty()">
        and status in
        <foreach close=")" collection="status" item="statusValue" open="(" separator=",">
          #{statusValue}
        </foreach>
      </if>
      <if test="colors != null and !colors.isEmpty()">
        and colors REGEXP
        <foreach collection="colors" item="colorsValue" separator="|">
          #{colorsValue}
        </foreach>
      </if>
      <if test="types != null and !types.isEmpty() and types.contains('sale')">
        and price_sale IS NOT NULL
      </if>
    order by
      create_time desc
    <if test="limit != null">
      limit #{limit}
    </if>
  </select>
</mapper>