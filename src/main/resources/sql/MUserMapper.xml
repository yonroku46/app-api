<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.demo.dao.mapper.MUserMapper">
  <resultMap id="BaseResultMap" type="com.app.demo.dao.entity.MUser">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="suid" jdbcType="VARCHAR" property="suid" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="profile_img" jdbcType="VARCHAR" property="profileImg" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="mail_key" jdbcType="VARCHAR" property="mailKey" />
    <result column="mail_auth" jdbcType="BIT" property="mailAuth" />
    <result column="latest_login" jdbcType="TIMESTAMP" property="latestLogin" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="delete_flg" jdbcType="BIT" property="deleteFlg" />
  </resultMap>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    mail, user_id, uuid, suid, `role`, user_name, profile_img, `password`, mail_key, 
    mail_auth, latest_login, create_time, delete_flg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from m_user
    where mail = #{mail,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from m_user
    where mail = #{mail,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.app.demo.dao.entity.MUser">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into m_user (mail, user_id, uuid, 
      suid, `role`, user_name, 
      profile_img, `password`, mail_key, 
      mail_auth, latest_login, create_time, 
      delete_flg)
    values (#{mail,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, 
      #{suid,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{profileImg,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mailKey,jdbcType=VARCHAR}, 
      #{mailAuth,jdbcType=BIT}, #{latestLogin,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{deleteFlg,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.app.demo.dao.entity.MUser">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into m_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mail != null">
        mail,
      </if>
      <if test="userId != null">
        user_id,
      </if>
        uuid,
      <if test="suid != null">
        suid,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="profileImg != null">
        profile_img,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="mailKey != null">
        mail_key,
      </if>
      <if test="mailAuth != null">
        mail_auth,
      </if>
      <if test="latestLogin != null">
        latest_login,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleteFlg != null">
        delete_flg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
        REPLACE(uuid(), '-', ''),
      <if test="suid != null">
        #{suid,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="profileImg != null">
        #{profileImg,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mailKey != null">
        #{mailKey,jdbcType=VARCHAR},
      </if>
      <if test="mailAuth != null">
        #{mailAuth,jdbcType=BIT},
      </if>
      <if test="latestLogin != null">
        #{latestLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        #{deleteFlg,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.demo.dao.entity.MUser">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update m_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="suid != null">
        suid = #{suid,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="profileImg != null">
        profile_img = #{profileImg,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mailKey != null">
        mail_key = #{mailKey,jdbcType=VARCHAR},
      </if>
      <if test="mailAuth != null">
        mail_auth = #{mailAuth,jdbcType=BIT},
      </if>
      <if test="latestLogin != null">
        latest_login = #{latestLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        delete_flg = #{deleteFlg,jdbcType=BIT},
      </if>
    </set>
    where mail = #{mail,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.demo.dao.entity.MUser">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update m_user
    set user_id = #{userId,jdbcType=INTEGER},
      uuid = #{uuid,jdbcType=VARCHAR},
      suid = #{suid,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      profile_img = #{profileImg,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      mail_key = #{mailKey,jdbcType=VARCHAR},
      mail_auth = #{mailAuth,jdbcType=BIT},
      latest_login = #{latestLogin,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delete_flg = #{deleteFlg,jdbcType=BIT}
    where mail = #{mail,jdbcType=VARCHAR}
  </update>
  <resultMap id="menuAuthInfoMap" type="com.app.demo.dto.MenuAuthInfoDto">
    <result column="requestMapping" jdbcType="VARCHAR" property="requestMapping" />
    <result column="accessibleFlg" jdbcType="BOOLEAN" property="accessibleFlg" />
  </resultMap>
  <select id="findUserByMail" parameterType="map" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from m_user
    where
      mail = #{mail,jdbcType=VARCHAR} and
      delete_flg = 0
  </select>
  <select id="findSocialUser" parameterType="map" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from m_user
    where
      (suid = #{suid,jdbcType=VARCHAR} or mail = #{mail,jdbcType=VARCHAR}) and
      delete_flg = 0
  </select>
  <select id="findUser" parameterType="map" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from m_user
    where
      user_id = #{userKey.userId,jdbcType=INTEGER} and mail = #{userKey.mail,jdbcType=VARCHAR} and
      delete_flg = 0
  </select>
  <select id="findMailKeyUser" parameterType="map" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from m_user
    where
      mail = #{mail,jdbcType=VARCHAR} and mail_key = #{mailKey,jdbcType=VARCHAR} and
    delete_flg = 0
  </select>
  <select id="getAccessibleInfo" parameterType="map" resultMap="menuAuthInfoMap">
    select
      #{path,jdbcType=VARCHAR} as requestMapping,
      case
        when JSON_EXTRACT(mur.accessible_path, CONCAT('$.', #{path,jdbcType=VARCHAR})) = 1 then true
        when JSON_EXTRACT(mur.accessible_path, CONCAT('$.', #{path,jdbcType=VARCHAR})) = 0 then false
      end as accessibleFlg
    from
      m_user mu
    inner join
      m_user_role mur
    on
      mu.`role` = mur.role_id
    where
      mu.user_id = #{userKey.userId,jdbcType=INTEGER} and
      mu.mail = #{userKey.mail,jdbcType=VARCHAR}
  </select>
</mapper>