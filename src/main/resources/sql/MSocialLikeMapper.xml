<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.demo.dao.mapper.MSocialLikeMapper">
  <resultMap id="BaseResultMap" type="com.app.demo.dao.entity.MSocialLike">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="like_id" jdbcType="INTEGER" property="likeId" />
    <result column="social_id" jdbcType="INTEGER" property="socialId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    like_id, social_id, user_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from m_social_like
    where like_id = #{likeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from m_social_like
    where like_id = #{likeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.app.demo.dao.entity.MSocialLike">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into m_social_like (like_id, social_id, user_id, 
      create_time)
    values (#{likeId,jdbcType=INTEGER}, #{socialId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.app.demo.dao.entity.MSocialLike">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into m_social_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="likeId != null">
        like_id,
      </if>
      <if test="socialId != null">
        social_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="likeId != null">
        #{likeId,jdbcType=INTEGER},
      </if>
      <if test="socialId != null">
        #{socialId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.demo.dao.entity.MSocialLike">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update m_social_like
    <set>
      <if test="socialId != null">
        social_id = #{socialId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where like_id = #{likeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.demo.dao.entity.MSocialLike">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update m_social_like
    set social_id = #{socialId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where like_id = #{likeId,jdbcType=INTEGER}
  </update>
  <resultMap id="SocialLikedCount" type="com.app.demo.dto.SocialLikedCountDto">
    <id column="social_id" jdbcType="INTEGER" property="socialId" />
    <result column="liked_count" jdbcType="INTEGER" property="likedCount" />
  </resultMap>
  <select id="findUserLiked" parameterType="map" resultType="com.app.demo.dao.entity.MSocialLike">
    select
      <include refid="Base_Column_List" />
    from m_social_like
    where
      user_id = #{userId,jdbcType=INTEGER} and social_id = #{socialId,jdbcType=INTEGER}
  </select>
  <select id="findUserLikedList" parameterType="map" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from m_social_like
    where
      user_id = #{userId,jdbcType=INTEGER}
  </select>
  <insert id="insertRow" parameterType="map">
    insert into m_social_like (social_id, user_id)
    values
      (#{socialId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <delete id="deleteRow" parameterType="map">
    delete from m_social_like
    where
      social_id = #{socialId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </delete>
</mapper>